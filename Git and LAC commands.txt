# Cloning a repository
git clone <repository-url>          # Copy an existing repository to your local machine

# Listing local bracnches
git branch

# Creating a new branch and switching to it
git checkout -b <branch-name>       # Create and switch to a new branch

# Switching to an existing branch
git checkout <branch-name>          # Switch to another branch

# Staging changes
git add <filename>                  # Stage specific files for commit
git add .                           # Stage all changes for commit

# Committing changes
git commit -m "Your commit message" # Commit staged changes with a descriptive message

# Pushing changes to the remote repository
git push origin <branch-name>       # Push your local commits to the remote repository
git push --force-with-lease origin <branch-name>  # Force push (used after rebasing)

# Pulling changes from the remote repository
git pull origin <branch-name>       # Fetch and merge changes from the remote branch
git pull origin <branch-name> --rebase  # Fetch and reapply your changes on top of the latest remote changes

# Resolving merge conflicts
# After manually editing and resolving conflicts in the file:
git add <filename>                  # Stage the resolved file
git rebase --continue               # Continue the rebase process after resolving conflicts
git rebase --abort                  # Abort the rebase and return to the previous state (before the rebase)

# Checking branch status
git status                          # Check the current branch and the status of your working directory

# Viewing the commit history
git log --oneline                   # View a one-line log of recent commits

# Delete a file from the working directory and stage the deletion
git rm <filename>

# Untrack a file (remove from repository, but keep it locally)
git rm --cached <filename>

# Commit the removal or untracking
git commit -m "Remove <filename> from the repository"  # For deletion
git commit -m "Stop tracking <filename>"               # For untracking

# Push the changes to the remote repository
git push origin <branch-name>

# Conect to lac 
ssh -X tost@lac8

# find /path/ -type f: Lists all files in the specified directory.
# awk -F. '{if (NF>1) print $NF}': Extracts the file extension.
# sort | uniq -c: Sorts the extensions and counts occurrences.
find /Lac8_D/DEFUSE/DEFUSE_DB/DB_mat/ -type f | awk -F. '{if (NF>1) print $NF}' | sort | uniq -c